<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spartan.dc.dao.write.DcPaymentTypeMapper">
  <resultMap id="BaseResultMap" type="com.spartan.dc.model.DcPaymentType">
    <id column="payment_type_id" jdbcType="BIGINT" property="paymentTypeId" />
    <result column="pay_type" jdbcType="SMALLINT" property="payType" />
    <result column="pay_channel_name" jdbcType="VARCHAR" property="payChannelName" />
    <result column="channel_code" jdbcType="VARCHAR" property="channelCode" />
    <result column="private_key" jdbcType="VARCHAR" property="privateKey" />
    <result column="endpoint_secret" jdbcType="VARCHAR" property="endpointSecret" />
    <result column="api_key" jdbcType="VARCHAR" property="apiKey" />
    <result column="api_version" jdbcType="VARCHAR" property="apiVersion" />
    <result column="bank_name" jdbcType="VARCHAR" property="bankName" />
    <result column="bank_account" jdbcType="VARCHAR" property="bankAccount" />
    <result column="bank_address" jdbcType="VARCHAR" property="bankAddress" />
    <result column="swift_code" jdbcType="VARCHAR" property="swiftCode" />
    <result column="enable_status" jdbcType="SMALLINT" property="enableStatus" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    payment_type_id, pay_type, pay_channel_name, channel_code, private_key, endpoint_secret, 
    api_key, api_version, bank_name, bank_account, bank_address, swift_code, enable_status,create_time,
    update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from dc_payment_type
    where payment_type_id = #{paymentTypeId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from dc_payment_type
    where payment_type_id = #{paymentTypeId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.spartan.dc.model.DcPaymentType">
    insert into dc_payment_type (payment_type_id, pay_type, pay_channel_name, 
      channel_code, private_key, endpoint_secret, 
      api_key, api_version, bank_name, 
      bank_account, bank_address, swift_code, enable_status,
      create_time, update_time)
    values (#{paymentTypeId,jdbcType=BIGINT}, #{payType,jdbcType=SMALLINT}, #{payChannelName,jdbcType=VARCHAR}, 
      #{channelCode,jdbcType=VARCHAR}, #{privateKey,jdbcType=VARCHAR}, #{endpointSecret,jdbcType=VARCHAR}, 
      #{apiKey,jdbcType=VARCHAR}, #{apiVersion,jdbcType=VARCHAR}, #{bankName,jdbcType=VARCHAR}, 
      #{bankAccount,jdbcType=VARCHAR}, #{bankAddress,jdbcType=VARCHAR}, #{swiftCode,jdbcType=VARCHAR},#{enableStatus,jdbcType=SMALLINT},
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.spartan.dc.model.DcPaymentType">
    insert into dc_payment_type
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="paymentTypeId != null">
        payment_type_id,
      </if>
      <if test="payType != null">
        pay_type,
      </if>
      <if test="payChannelName != null">
        pay_channel_name,
      </if>
      <if test="channelCode != null">
        channel_code,
      </if>
      <if test="privateKey != null">
        private_key,
      </if>
      <if test="endpointSecret != null">
        endpoint_secret,
      </if>
      <if test="apiKey != null">
        api_key,
      </if>
      <if test="apiVersion != null">
        api_version,
      </if>
      <if test="bankName != null">
        bank_name,
      </if>
      <if test="bankAccount != null">
        bank_account,
      </if>
      <if test="bankAddress != null">
        bank_address,
      </if>
      <if test="swiftCode != null">
        swift_code,
      </if>
      <if test="enableStatus != null">
        enable_status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="paymentTypeId != null">
        #{paymentTypeId,jdbcType=BIGINT},
      </if>
      <if test="payType != null">
        #{payType,jdbcType=SMALLINT},
      </if>
      <if test="payChannelName != null">
        #{payChannelName,jdbcType=VARCHAR},
      </if>
      <if test="channelCode != null">
        #{channelCode,jdbcType=VARCHAR},
      </if>
      <if test="privateKey != null">
        #{privateKey,jdbcType=VARCHAR},
      </if>
      <if test="endpointSecret != null">
        #{endpointSecret,jdbcType=VARCHAR},
      </if>
      <if test="apiKey != null">
        #{apiKey,jdbcType=VARCHAR},
      </if>
      <if test="apiVersion != null">
        #{apiVersion,jdbcType=VARCHAR},
      </if>
      <if test="bankName != null">
        #{bankName,jdbcType=VARCHAR},
      </if>
      <if test="bankAccount != null">
        #{bankAccount,jdbcType=VARCHAR},
      </if>
      <if test="bankAddress != null">
        #{bankAddress,jdbcType=VARCHAR},
      </if>
      <if test="swiftCode != null">
        #{swiftCode,jdbcType=VARCHAR},
      </if>
      <if test="enableStatus != null">
        #{enable_status,jdbcType=SMALLINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.spartan.dc.model.DcPaymentType">
    update dc_payment_type
    <set>
      <if test="payType != null">
        pay_type = #{payType,jdbcType=SMALLINT},
      </if>
      <if test="payChannelName != null">
        pay_channel_name = #{payChannelName,jdbcType=VARCHAR},
      </if>
      <if test="channelCode != null">
        channel_code = #{channelCode,jdbcType=VARCHAR},
      </if>
      <if test="privateKey != null">
        private_key = #{privateKey,jdbcType=VARCHAR},
      </if>
      <if test="endpointSecret != null">
        endpoint_secret = #{endpointSecret,jdbcType=VARCHAR},
      </if>
      <if test="apiKey != null">
        api_key = #{apiKey,jdbcType=VARCHAR},
      </if>
      <if test="apiVersion != null">
        api_version = #{apiVersion,jdbcType=VARCHAR},
      </if>
      <if test="bankName != null">
        bank_name = #{bankName,jdbcType=VARCHAR},
      </if>
      <if test="bankAccount != null">
        bank_account = #{bankAccount,jdbcType=VARCHAR},
      </if>
      <if test="bankAddress != null">
        bank_address = #{bankAddress,jdbcType=VARCHAR},
      </if>
      <if test="swiftCode != null">
        swift_code = #{swiftCode,jdbcType=VARCHAR},
      </if>
      <if test="enableStatus != null">
        enable_status = #{enableStatus,jdbcType=SMALLINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where payment_type_id = #{paymentTypeId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.spartan.dc.model.DcPaymentType">
    update dc_payment_type
    set pay_type = #{payType,jdbcType=SMALLINT},
      pay_channel_name = #{payChannelName,jdbcType=VARCHAR},
      channel_code = #{channelCode,jdbcType=VARCHAR},
      private_key = #{privateKey,jdbcType=VARCHAR},
      endpoint_secret = #{endpointSecret,jdbcType=VARCHAR},
      api_key = #{apiKey,jdbcType=VARCHAR},
      api_version = #{apiVersion,jdbcType=VARCHAR},
      bank_name = #{bankName,jdbcType=VARCHAR},
      bank_account = #{bankAccount,jdbcType=VARCHAR},
      bank_address = #{bankAddress,jdbcType=VARCHAR},
      swift_code = #{swiftCode,jdbcType=VARCHAR},
      enable_status = #{enableStatus,jdbcType=SMALLINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where payment_type_id = #{paymentTypeId,jdbcType=BIGINT}
  </update>
</mapper>